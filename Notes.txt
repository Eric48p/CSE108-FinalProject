Ideas:

- Tab for forum
* Must be logged in to use
* Only Executive board members can create posts 
* All members comments are shown as anonymous
* Executive board members have the option to remain anonymous or reveal their name
* Executive board members can see the names of anyone that left a comment

- Tab for live polls
* Will be used for elections and club meeting polls

- On login user will be a general member by default
* If they want their account to have the role of an executive board member they would have to request that to the 
person holding the adming account

- We will create a master admin account with credentails
* Master admin account will have a strong password
* Credentails can be shared with executive board members so they can edit the websites data

Methods:
- Create a user
- Check if a user attempting to create a forum is an executive board member
- Logging in/Logging out

Forum Methods:
- Creating a forum
- Delete a forum
- Return all the forums and the data of each one, such as likes, dislikes, content of the post, 
timestamp(date and time)
- Return all the comments in a forum and the data of each one, such as likes, dislikes, content of the comment, 
timestamp(date and time)
- Sorting forums based on likes and dislikes
- Liking and disliking a forum
- Like and dislike a commment


UPDATED METHODS:

- Creating a user
- Logging in

- Creating a Forum (POST)
* frontend will store users name in session tokens. frontend will send users name, time, forum title, and forum content to backend. Likes and dislikes are initialized to 0. 

- Replying to a forum post (POST)
* Front end will send forum id, commentors name, time, and comment to backend. Likes and dislikes are initialized to 0. 

- Edit a forum post (PUT)

- Deleting a forum (DELETE)
* Delete the forum and all comments associated with that forums id and all interactions from either forum interactions or comment interactions 

- Deleting a comment (DELETE)
* Only board members should be allowed to do this
* Frontend will send comment ID to backend 

- Editing a comment (PUT)
* Anyone can edit their own comments
* Frontend will send edited comment to backend

- Liking or Disliking Forum (POST)
* Front end will send interaction and forum id and user id
* Backend will check if the user has already interacted with the forum
* Backend will generate new entry in Forum interaction table and update either likes or dislikes in forums table

- Liking and Disliking Comment (POST)
* Front end will send interaction and forum id and commend id and user id
* Back end will check if the user has already interacted with this comment
* Back end will generate new entry in comment intraction table and update either likes or dislikes in forums table


